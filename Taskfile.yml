version: '3'

tasks:
  sb:install-dependencies:
    desc: Install required dependencies for secure boot
    cmds:
      - apt update
      - apt install -y sbsigntool shim-signed

  sb:update-auto-signing-setup:
    desc: Update ZFSBootMenu config and post-generation scripts for auto-signing setup.
    cmds:
      - cp zfsbootmenu/config.yaml /etc/zfsbootmenu/config.yaml
      - rm -rf /etc/zfsbootmenu/generate-zbm.post.d
      - cp -r zfsbootmenu/generate-zbm.post.d /etc/zfsbootmenu/

  initial-setup:install-dependencies:
    desc: Install required dependencies for dracut module
    cmds:
      - apt update
      - apt install -y fido2-tools cryptsetup dropbear-bin dracut-core dracut-network

  initial-setup:install-crypt-ssh-nohelpers:
    desc: Copy the crypt-ssh (no helpers) module to dracut directory
    cmds:
      - rm -rf /usr/lib/dracut/modules.d/60crypt-ssh
      - cp -r 60crypt-ssh /usr/lib/dracut/modules.d

  copy-dracut-module:
    desc: Copy the fido2-nosystemd module to dracut directory
    cmds:
      - rm -rf /usr/lib/dracut/modules.d/91fido2-nosystemd
      - cp -r 91fido2-nosystemd /usr/lib/dracut/modules.d

  initial-setup:configure-network:
    desc: Configure dracut-network for network interface setup
    cmds:
      - mkdir -p /etc/cmdline.d
#       rd.break=[cmdline|pre-udev|pre-trigger|initqueue|pre-mount|mount|pre-pivot|cleanup]
#       drop the shell on defined breakpoint (use egrep 'rd.?break' /usr/lib/dracut/modules.d/99base/init.sh to find the breakpoints supported by your dracut version)
      - echo 'ip=dhcp rd.neednet=1 rd.shell' > /etc/cmdline.d/dracut-network.conf
      # ip=<client-IP>:[<peer>]:<gateway-IP>:<netmask>:<client_hostname>:<interface>:{none|off|dhcp|on|any|dhcp6|auto6|ibft}
      #- echo 'ip=192.168.40.99::192.168.40.1:255.255.255.0::eth0:none rd.neednet=1 rd.break' > /etc/cmdline.d/dracut-network.conf
      - echo "send fqdn.fqdn zbm;" >> /usr/lib/dracut/modules.d/35network-legacy/dhclient.conf

  initial-setup:patch-dracut-network-legacy:
    desc: Fix broken module (dracut 059-4 https://github.com/dracutdevs/dracut/issues/2620)
    cmds:
    # /lib/dracut/hooks/initqueue/finished also does not work
#      - sed -i '/echo '\''for i in \/tmp\/net\.\*\.did-setup/i\            mkdir -p "\$hookdir"/initqueue/finished' /usr/lib/dracut/modules.d/35network-legacy/net-genrules.sh
      - sed -i '/echo "\[ -f \/tmp\/net\.\$netif\.did-setup \]"/i\        mkdir -p "\$hookdir"/initqueue/finished' /usr/lib/dracut/modules.d/35network-legacy/dhclient-script.sh

  initial-setup:configure-refind:
    desc: Configure rEFInd for ZFSBootMenu
    cmds:
      # - refind-install
      - rm -f /boot/refind_linux.conf
      - |
          cat << EOF > /boot/efi/EFI/ZBM/refind_linux.conf
          "Boot default"  "loglevel=7 zbm.timeout=60"
          "Boot to menu"  "quiet loglevel=0 zbm.show"
          EOF

  initial-setup:configure-dropbear:
    desc: Configure Dropbear for remote SSH access
    cmds:
      - mkdir -p /etc/dropbear
      - for keytype in rsa ecdsa ed25519; do ssh-keygen -t "${keytype}" -f "/etc/dropbear/dropbear_${keytype}_host_key" -N ""; done
      - ln -s "${HOME}/.ssh/authorized_keys" /etc/dropbear/root_key

  clean-old-configs:
    desc: Clean up old ZFSBootMenu configurations
    cmds:
      - rm -rf /etc/zfsbootmenu/dracut.conf.d
      - mkdir -p /etc/zfsbootmenu/dracut.conf.d
      - rm -rf /etc/zfsbootmenu/hooks

  copy-release-config:
    desc: Clean & copy release build configuration for ZFSBootMenu
    cmds:
      - task: clean-old-configs
      - cp zfsbootmenu/release.conf.d/*.conf /etc/zfsbootmenu/dracut.conf.d/
      - cp zfsbootmenu/config.yaml /etc/zfsbootmenu/config.yaml
      - cp -r zfsbootmenu/hooks /etc/zfsbootmenu/

  copy-recovery-config:
    desc: Clean & copy recovery build configuration for ZFSBootMenu with remote access
    cmds:
      - task: clean-old-configs
      - cp zfsbootmenu/recovery.conf.d/*.conf /etc/zfsbootmenu/dracut.conf.d/
      - cp zfsbootmenu/config.yaml /etc/zfsbootmenu/config.yaml
      - cp -r zfsbootmenu/hooks /etc/zfsbootmenu/

  generate-zbm:
    desc: Generate ZFSBootMenu
    cmds:
      - generate-zbm --debug

  rename-zbm-efi-recovery:
    desc: Rename the latest ZFSBootMenu EFI file to avoid pruning during future builds
    dir: /boot/efi/EFI/ZBM
    cmds:
      - mv $(ls vmlinuz-2.3.0_*.EFI | sort -V | tail -n 1) vmlinuz-recovery.EFI

  rename-zbm-efi-release:
    desc: Rename the latest ZFSBootMenu EFI file for release build
    dir: /boot/efi/EFI/ZBM
    cmds:
      - mv $(ls vmlinuz-2.3.0_*.EFI | sort -V | tail -n 1) vmlinuz-release.EFI
